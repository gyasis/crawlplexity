version: '3.8'

services:
  crawl4ai:
    image: unclecode/crawl4ai:latest
    container_name: crawlplexity-crawl4ai
    ports:
      - "11235:11235"
    environment:
      - SERPER_API_KEY=${SERPER_API_KEY}
    shm_size: 1g
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11235/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - crawl4ai_cache:/app/cache
    networks:
      - crawlplexity

  litellm:
    build: ./lib/litellm-service
    container_name: crawlplexity-litellm
    ports:
      - "14782:14782"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL}
      - LITELLM_PORT=14782
      - LITELLM_HOST=0.0.0.0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:14782/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - crawlplexity
    depends_on:
      - redis

  redis:
    image: redis:alpine
    container_name: crawlplexity-redis
    ports:
      - "29674:6379"
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - crawlplexity
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  video-processor:
    build: ./video-processing-service
    container_name: crawlplexity-video-processor
    ports:
      - "11236:11236"
    environment:
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
      - REDIS_URL=redis://redis:6379/1
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-2.0-flash-exp}
      - GEMINI_VISION_MODEL=${GEMINI_VISION_MODEL:-gemini-2.0-flash-exp}
      - FRAME_INTERVAL=${FRAME_INTERVAL:-1}
    volumes:
      - video_cache:/app/cache
      - video_temp:/app/temp
      - ./video-processing-service:/app
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11236/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - crawlplexity

volumes:
  crawl4ai_cache:
    driver: local
  redis_data:
    driver: local
  video_cache:
    driver: local
  video_temp:
    driver: local

networks:
  crawlplexity:
    driver: bridge